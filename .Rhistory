panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
axis.ticks.y = element_blank(),
# plot.margin = unit(c(1,1,1,1), "cm")
) +
# guides(fill="none") +
guides(size='none')
mls <- mls %>%
mutate(qualify = printName != '') %>%
mutate(rank_score = qualify * fg3a) %>%
mutate(goodness = fg3m * pct3) %>%
arrange(desc(goodness)) %>%
group_by(slugTeam) %>%
arrange(desc(rank_score)) %>%
mutate(cumsum3 = cumsum(fg3a)) %>%
mutate(x_cum = cumsum3 - 0.5 * fg3a) %>%
mutate(x_tot = cumsum3 + 60,
tot_fg3a = ifelse(qualify, '', as.character(cumsum3)),
# team_fg_pg = ifelse(qualify, '', as.character(cumsum3 / ))
) %>%
mutate(color_score = ifelse(qualify, fg3a, 0)) %>%
ungroup()
ggplot(mls, aes(group = slugTeam, fill = pct3, x=fg3a, y=slugTeam)) +
geom_bar(
position="stack",
stat="identity",
color = alpha('black', 0.5),
size = 0.15,
alpha = 0.6,
# fill = 'white',
width = 1,
) +
geom_text(
aes(
x = x_cum,
y = slugTeam,
label = nameLast,
size = fg3a,
),
hjust = 0.5,
vjust = 0.5,
color = '#545454',
) +
geom_text(
aes(
x = x_tot,
y = slugTeam,
label = tot_fg3a,
),
hjust = 0.5,
vjust = 0.5,
size = 3
) +
scale_fill_gradient2(
low = '#1484F0',
high = '#F08814',
# low = '#A60917',
# high = '#2CE731',
mid = 'white',
midpoint = 0.36
) +
scale_size(range = c(1.5, 4.5)) +
scale_y_discrete(name='', expand=c(0.05, 0.05)) +
scale_x_continuous(name = '3-point attempts (2022-23 season thru Feb 27)', breaks=NULL, limits=c(0,2850), expand = c(0,0.1), position='top') +
theme_bw() +
theme(
# legend.position = "none",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
axis.ticks.y = element_blank(),
# plot.margin = unit(c(1,1,1,1), "cm")
) +
# guides(fill="none") +
guides(size='none')
mls <- mls %>%
mutate(qualify = printName != '') %>%
mutate(rank_score = qualify * fg3m * pct3) %>%
group_by(slugTeam) %>%
arrange(desc(rank_score)) %>%
mutate(cumsum3 = cumsum(fg3a)) %>%
mutate(x_cum = cumsum3 - 0.5 * fg3a) %>%
mutate(x_tot = cumsum3 + 60,
tot_fg3a = ifelse(qualify, '', as.character(cumsum3)),
# team_fg_pg = ifelse(qualify, '', as.character(cumsum3 / ))
) %>%
mutate(color_score = ifelse(qualify, fg3a, 0)) %>%
ungroup()
ggplot(mls, aes(group = slugTeam, fill = pct3, x=fg3a, y=slugTeam)) +
geom_bar(
position="stack",
stat="identity",
color = alpha('black', 0.5),
size = 0.15,
alpha = 0.6,
# fill = 'white',
width = 1,
) +
geom_text(
aes(
x = x_cum,
y = slugTeam,
label = nameLast,
size = fg3a,
),
hjust = 0.5,
vjust = 0.5,
color = '#545454',
) +
geom_text(
aes(
x = x_tot,
y = slugTeam,
label = tot_fg3a,
),
hjust = 0.5,
vjust = 0.5,
size = 3
) +
scale_fill_gradient2(
low = '#1484F0',
high = '#F08814',
# low = '#A60917',
# high = '#2CE731',
mid = 'white',
midpoint = 0.36
) +
scale_size(range = c(1.5, 4.5)) +
scale_y_discrete(name='', expand=c(0.05, 0.05)) +
scale_x_continuous(name = '3-point attempts (2022-23 season thru Feb 27)', breaks=NULL, limits=c(0,2850), expand = c(0,0.1), position='top') +
theme_bw() +
theme(
# legend.position = "none",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
axis.ticks.y = element_blank(),
# plot.margin = unit(c(1,1,1,1), "cm")
) +
# guides(fill="none") +
guides(size='none')
library(nbastatR)
library(dplyr)
library(tidyverse)
library(lubridate)
library(ggplot2)
library(hrbrthemes)
library(ggpattern)
library(scales)
mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
ml <- metrics_leaders(
seasons = 2023,
metric = 'fg3a',
modes = 'Totals'
)
names(ml)
n_top_minutes <- 8
top_n_players <- ml %>%
group_by(slugTeam) %>%
arrange(desc(minutes)) %>%
slice_head(n = n_top_minutes) %>%
ungroup()
nrow(top_n_players)
head(ml)
unique_players <- ml$namePlayer
my_profiles <- player_profiles(
players = unique_players,
nest_data = F,
return_message = TRUE
)
Sys.setenv("VROOM_CONNECTION_SIZE" = 1e12)
my_profiles <- player_profiles(
players = unique_players,
nest_data = F,
return_message = TRUE
)
list(ml$namePlayer)
unique_players <- list(ml$namePlayer)
my_profiles <- player_profiles(
players = unique_players,
nest_data = F,
return_message = TRUE
)
error()
error
unique_players
unique_players <- c(ml$namePlayer)
unique_players
my_profiles <- player_profiles(
players = unique_players,
nest_data = F,
return_message = TRUE
)
my_profiles <- player_profiles(
players = c('Stephen Curry'),
nest_data = F,
return_message = TRUE
)
?player_profiles
my_profiles <- player_profiles()
my_profiles <- player_profiles(players = c('Stephen Curry'))
ml <- metrics_leaders(
seasons = 2023,
metric = 'fg3a',
modes = 'Totals'
)
ml
library(nbastatR)
library(dplyr)
library(tidyverse)
library(lubridate)
library(ggplot2)
library(hrbrthemes)
library(ggpattern)
library(scales)
mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
ml <- metrics_leaders(
seasons = 2023,
metric = 'fg3a',
modes = 'Totals'
)
unique_players <- ml$namePlayer
my_profiles <- player_profiles(players = c('Stephen Curry'))
Sys.setenv("VROOM_CONNECTION_SIZE" = 100000000)
my_profiles <- player_profiles(players = c('Stephen Curry'))
my_profiles
unique_players <- ml$namePlayer
my_profiles <- player_profiles(players = unique_players)
unique_players <- ml$namePlayer
n_top_minutes <- 8
top_n_players <- ml %>%
group_by(slugTeam) %>%
arrange(desc(minutes)) %>%
slice_head(n = n_top_minutes) %>%
ungroup()
my_profiles <- player_profiles(players = top_n_players$namePlayer)
1178/60
940 * .02
library(tidyverse)
library(ggplot2)
library(lubridate)
library(scales)
library(Lahman)
library(baseballr)
setwd('baseball/birthdays')
data_files <- list.files(
path = 'data/birthday_box_scores/',
pattern = '.csv',
full.names = FALSE,
ignore.case = FALSE
)
all_years <- lapply(list(as.numeric(unique(substr(data_files, 8, 11)))), sort)[[1]]
for (year in all_years) {
hitting_stats <- mlb_stats(
stat_type = 'season',
stat_group = 'pitching',
player_pool = 'All',
season = year,
limit = 10000
)
fname <- paste0('data/season_data/pitching_stats_', year, '.csv')
write_csv(pitching_stats, fname)
}
for (year in all_years) {
pitching_stats <- mlb_stats(
stat_type = 'season',
stat_group = 'pitching',
player_pool = 'All',
season = year,
limit = 10000
)
fname <- paste0('data/season_data/pitching_stats_', year, '.csv')
write_csv(pitching_stats, fname)
}
calculate_k_rate <- function(pitcher_df) {
tot_ip <- sum(pitcher_df$outs) / 3
tot_k <- sum(pitcher_df$strike_outs)
tot_k / tot_ip * 9
}
calculate_ra <- function(pitcher_df) {
tot_r <- sum(pitcher_df$runs)
tot_ip <- sum(pitcher_df$outs) / 3
tot_r / tot_ip * 9
}
birthday_pitchers <- read_csv('data/cleaned/birthday_pitcher_stats.csv')
names(birthday_pitchers)
head(birthday_pitchers)
birthday_pitchers <- birthday_pitchers %>%
filter(!is.na(outs))
birthday_pitchers$game_year <- substr(birthday_pitchers$game_date, 1, 4)
unique_years <- unique(birthday_pitchers$game_year)
unique_years
birthday_boys_season_stats <- data.frame()
for (year_str in unique_years) {
print(year_str)
season_stats_fname <- paste0('data/season_data/pitching_stats_',
year_str,
'.csv')
season_stats_df <- read_csv(season_stats_fname)
players_this_year <- birthday_pitchers %>%
filter(game_year == year_str) %>%
pull(player_id)
birthday_boys_this_year <- season_stats_df %>%
filter(player_id %in% players_this_year)
birthday_boys_season_stats <- rbind(
birthday_boys_season_stats,
birthday_boys_this_year
)
}
birthday_boys_season_stats %>%
select(player_id, season, player_full_name, runs, outs) %>%
print(n = 10)
birthdays_stats <- c(
calculate_ra(birthday_pitchers),
calculate_k_rate(birthday_pitchers)
)
birthdays_stats
full_season_stats <- c(
calculate_ra(birthday_boys_season_stats),
calculate_k_rate(birthday_boys_season_stats)
)
full_season_stats
sum(birthday_boys_season_stats$outs)
sum(birthday_boys_season_stats$outs) / 3
sum(birthday_boys_season_stats$strike_outs)
sum(birthday_boys_season_stats$outs) / 3
sum(birthday_pitchers$outs) / 3
sum(birthday_pitchers$outs) / 3 / 9
sum(birthday_pitchers$strike_outs)
sum(birthday_boys_season_stats$outs) / 3 / 9
sum(birthday_pitchers$runs)
calculate_obp <- function(hitter_df) {
tot_ob <- sum(hitter_df$hits) +
sum(hitter_df$base_on_balls) +
sum(hitter_df$hit_by_pitch)
tot_pa <- sum(hitter_df$plate_appearances)
obp <- tot_ob / tot_pa
obp
}
calculate_ba <- function(hitter_df) {
ba <- sum(hitter_df$hits) / sum(hitter_df$at_bats)
ba
}
calculate_slg <- function(hitter_df) {
slg <- sum(hitter_df$total_bases) / sum(hitter_df$at_bats)
slg
}
birthday_hits <- read_csv('data/cleaned/birthday_hitter_stats.csv')
birthday_hits$game_year <- substr(birthday_hits$game_date, 1, 4)
unique_years <- unique(birthday_hits$game_year)
birthday_boys_season_stats <- data.frame()
for (year_str in unique_years) {
print(year_str)
season_stats_fname <- paste0('data/season_data/hitting_stats_',
year_str,
'.csv')
season_stats_df <- read_csv(season_stats_fname)
players_this_year <- birthday_hits %>%
filter(game_year == year_str) %>%
pull(player_id)
birthday_boys_this_year <- season_stats_df %>%
filter(player_id %in% players_this_year)
birthday_boys_season_stats <- rbind(
birthday_boys_season_stats,
birthday_boys_this_year
)
}
birthday_boys_season_stats %>%
select(player_id, season, player_full_name, hits, at_bats) %>%
print(n = 10)
birthdays_slash <- c(
calculate_ba(birthday_hits),
calculate_obp(birthday_hits),
calculate_slg(birthday_hits)
)
full_season_slash <- c(
calculate_ba(birthday_boys_season_stats),
calculate_obp(birthday_boys_season_stats),
calculate_slg(birthday_boys_season_stats)
)
nrow(birthday_hits)
sum(birthday_hits$plate_appearances)
nrow(birthday_pitchers)
sum(birthday_pitchers$outs) / 3
nrow(birthday_hits)
sum(birthday_hits$plate_appearances)
birthdays_slash
nrow(full_season_slash)
nrow(birthday_boys_season_stats)
birthday_boys_season_stats <- data.frame()
for (year_str in unique_years) {
print(year_str)
season_stats_fname <- paste0('data/season_data/hitting_stats_',
year_str,
'.csv')
season_stats_df <- read_csv(season_stats_fname)
players_this_year <- birthday_hits %>%
filter(game_year == year_str) %>%
pull(player_id)
birthday_boys_this_year <- season_stats_df %>%
filter(player_id %in% players_this_year)
birthday_boys_season_stats <- rbind(
birthday_boys_season_stats,
birthday_boys_this_year
)
}
birthday_boys_season_stats %>%
select(player_id, season, player_full_name, hits, at_bats) %>%
print(n = 10)
sum(birthday_boys_season_stats$plate_appearances)
full_season_slash
sum(birthday_boys_season_stats$strike_outs)
89002 / 433376
sum(birthday_hits$strike_outs)
sum(birthday_hits$plate_appearances)
889 / 3991
sum(birthday_hits$base_on_balls)
sum(birthday_boys_season_stats$base_on_balls)
309 / 3991
36887 / 433376
calculate_k_rate <- function(pitcher_df) {
tot_ip <- sum(pitcher_df$outs) / 3
tot_k <- sum(pitcher_df$strike_outs)
tot_k / tot_ip * 9
}
calculate_ra <- function(pitcher_df) {
tot_r <- sum(pitcher_df$runs)
tot_ip <- sum(pitcher_df$outs) / 3
tot_r / tot_ip * 9
}
birthday_pitchers <- read_csv('data/cleaned/birthday_pitcher_stats.csv') %>%
filter(!is.na(outs))
birthday_pitchers$game_year <- substr(birthday_pitchers$game_date, 1, 4)
unique_years <- unique(birthday_pitchers$game_year)
birthday_boys_season_stats <- data.frame()
for (year_str in unique_years) {
print(year_str)
season_stats_fname <- paste0('data/season_data/pitching_stats_',
year_str,
'.csv')
season_stats_df <- read_csv(season_stats_fname)
players_this_year <- birthday_pitchers %>%
filter(game_year == year_str) %>%
pull(player_id)
birthday_boys_this_year <- season_stats_df %>%
filter(player_id %in% players_this_year)
birthday_boys_season_stats <- rbind(
birthday_boys_season_stats,
birthday_boys_this_year
)
}
birthday_boys_season_stats %>%
select(player_id, season, player_full_name, runs, outs) %>%
print(n = 10)
birthdays_stats <- c(
calculate_ra(birthday_pitchers),
calculate_k_rate(birthday_pitchers)
)
full_season_stats <- c(
calculate_ra(birthday_boys_season_stats),
calculate_k_rate(birthday_boys_season_stats)
)
nrow(birthday_pitchers)
sum(birthday_pitchers$outs) / 3
sum(birthday_pitchers$outs) / 3 / 9
162 / 5
birthday_stats
birthdays_stats
full_season_stats
sum(birthday_pitchers$base_on_balls)
sum(birthday_pitchers$plate_appearances)
sum(birthday_pitchers$base_on_balls)
sum(birthday_pitchers$base_on_balls) / 487.666
sum(birthday_boys_season_stats$base_on_balls)
sum(birthday_boys_season_stats$outs) / 3
4091 / 12781
sum(birthday_pitchers$home_runs)
sum(birthday_pitchers$strike_outs)
sum(birthday_pitchers$runs)
birthday_boys_season_stats <- data.frame()
for (year_str in unique_years) {
print(year_str)
season_stats_fname <- paste0('data/season_data/hitting_stats_',
year_str,
'.csv')
season_stats_df <- read_csv(season_stats_fname)
players_this_year <- birthday_hits %>%
filter(game_year == year_str) %>%
pull(player_id)
birthday_boys_this_year <- season_stats_df %>%
filter(player_id %in% players_this_year)
birthday_boys_season_stats <- rbind(
birthday_boys_season_stats,
birthday_boys_this_year
)
}
birthday_boys_season_stats %>%
select(player_id, season, player_full_name, hits, at_bats) %>%
print(n = 10)
sum(birthday_boys_season_stats$home_runs)
sum(birthday_boys_season_stats$plate_appearances)
sum(birthday_hits$plate_appearances)
sum(birthday_hits$home_runs)
132 / 3991
12363 / 376166
