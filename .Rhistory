mutate(cumsum3 = cumsum(fg3a)) %>%
mutate(x_cum = cumsum3 - 0.5 * fg3a) %>%
mutate(x_tot = cumsum3 + 60,
tot_fg3a = ifelse(qualify, '', as.character(cumsum3)),
# team_fg_pg = ifelse(qualify, '', as.character(cumsum3 / ))
) %>%
mutate(color_score = ifelse(qualify, fg3a, 0)) %>%
mutate(goodness = fg3m * pct3) %>%
arrange(desc(goodness)) %>%
ungroup()
ggplot(mls, aes(group = slugTeam, fill = pct3, x=fg3a, y=slugTeam)) +
geom_bar(
position="stack",
stat="identity",
color = alpha('black', 0.5),
size = 0.15,
alpha = 0.6,
# fill = 'white',
width = 1,
) +
geom_text(
aes(
x = x_cum,
y = slugTeam,
label = nameLast,
size = fg3a,
),
hjust = 0.5,
vjust = 0.5,
color = '#545454',
) +
geom_text(
aes(
x = x_tot,
y = slugTeam,
label = tot_fg3a,
),
hjust = 0.5,
vjust = 0.5,
size = 3
) +
scale_fill_gradient2(
low = '#1484F0',
high = '#F08814',
# low = '#A60917',
# high = '#2CE731',
mid = 'white',
midpoint = 0.36
) +
scale_size(range = c(1.5, 4.5)) +
scale_y_discrete(name='', expand=c(0.05, 0.05)) +
scale_x_continuous(name = '3-point attempts (2022-23 season thru Feb 27)', breaks=NULL, limits=c(0,2850), expand = c(0,0.1), position='top') +
theme_bw() +
theme(
# legend.position = "none",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
axis.ticks.y = element_blank(),
# plot.margin = unit(c(1,1,1,1), "cm")
) +
# guides(fill="none") +
guides(size='none')
mls <- mls %>%
mutate(qualify = printName != '') %>%
mutate(rank_score = qualify * fg3a) %>%
mutate(goodness = fg3m * pct3) %>%
arrange(desc(goodness)) %>%
group_by(slugTeam) %>%
arrange(desc(rank_score)) %>%
mutate(cumsum3 = cumsum(fg3a)) %>%
mutate(x_cum = cumsum3 - 0.5 * fg3a) %>%
mutate(x_tot = cumsum3 + 60,
tot_fg3a = ifelse(qualify, '', as.character(cumsum3)),
# team_fg_pg = ifelse(qualify, '', as.character(cumsum3 / ))
) %>%
mutate(color_score = ifelse(qualify, fg3a, 0)) %>%
ungroup()
ggplot(mls, aes(group = slugTeam, fill = pct3, x=fg3a, y=slugTeam)) +
geom_bar(
position="stack",
stat="identity",
color = alpha('black', 0.5),
size = 0.15,
alpha = 0.6,
# fill = 'white',
width = 1,
) +
geom_text(
aes(
x = x_cum,
y = slugTeam,
label = nameLast,
size = fg3a,
),
hjust = 0.5,
vjust = 0.5,
color = '#545454',
) +
geom_text(
aes(
x = x_tot,
y = slugTeam,
label = tot_fg3a,
),
hjust = 0.5,
vjust = 0.5,
size = 3
) +
scale_fill_gradient2(
low = '#1484F0',
high = '#F08814',
# low = '#A60917',
# high = '#2CE731',
mid = 'white',
midpoint = 0.36
) +
scale_size(range = c(1.5, 4.5)) +
scale_y_discrete(name='', expand=c(0.05, 0.05)) +
scale_x_continuous(name = '3-point attempts (2022-23 season thru Feb 27)', breaks=NULL, limits=c(0,2850), expand = c(0,0.1), position='top') +
theme_bw() +
theme(
# legend.position = "none",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
axis.ticks.y = element_blank(),
# plot.margin = unit(c(1,1,1,1), "cm")
) +
# guides(fill="none") +
guides(size='none')
mls <- mls %>%
mutate(qualify = printName != '') %>%
mutate(rank_score = qualify * fg3m * pct3) %>%
group_by(slugTeam) %>%
arrange(desc(rank_score)) %>%
mutate(cumsum3 = cumsum(fg3a)) %>%
mutate(x_cum = cumsum3 - 0.5 * fg3a) %>%
mutate(x_tot = cumsum3 + 60,
tot_fg3a = ifelse(qualify, '', as.character(cumsum3)),
# team_fg_pg = ifelse(qualify, '', as.character(cumsum3 / ))
) %>%
mutate(color_score = ifelse(qualify, fg3a, 0)) %>%
ungroup()
ggplot(mls, aes(group = slugTeam, fill = pct3, x=fg3a, y=slugTeam)) +
geom_bar(
position="stack",
stat="identity",
color = alpha('black', 0.5),
size = 0.15,
alpha = 0.6,
# fill = 'white',
width = 1,
) +
geom_text(
aes(
x = x_cum,
y = slugTeam,
label = nameLast,
size = fg3a,
),
hjust = 0.5,
vjust = 0.5,
color = '#545454',
) +
geom_text(
aes(
x = x_tot,
y = slugTeam,
label = tot_fg3a,
),
hjust = 0.5,
vjust = 0.5,
size = 3
) +
scale_fill_gradient2(
low = '#1484F0',
high = '#F08814',
# low = '#A60917',
# high = '#2CE731',
mid = 'white',
midpoint = 0.36
) +
scale_size(range = c(1.5, 4.5)) +
scale_y_discrete(name='', expand=c(0.05, 0.05)) +
scale_x_continuous(name = '3-point attempts (2022-23 season thru Feb 27)', breaks=NULL, limits=c(0,2850), expand = c(0,0.1), position='top') +
theme_bw() +
theme(
# legend.position = "none",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
axis.ticks.y = element_blank(),
# plot.margin = unit(c(1,1,1,1), "cm")
) +
# guides(fill="none") +
guides(size='none')
library(nbastatR)
library(dplyr)
library(tidyverse)
library(lubridate)
library(ggplot2)
library(hrbrthemes)
library(ggpattern)
library(scales)
mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
ml <- metrics_leaders(
seasons = 2023,
metric = 'fg3a',
modes = 'Totals'
)
names(ml)
n_top_minutes <- 8
top_n_players <- ml %>%
group_by(slugTeam) %>%
arrange(desc(minutes)) %>%
slice_head(n = n_top_minutes) %>%
ungroup()
nrow(top_n_players)
head(ml)
unique_players <- ml$namePlayer
my_profiles <- player_profiles(
players = unique_players,
nest_data = F,
return_message = TRUE
)
Sys.setenv("VROOM_CONNECTION_SIZE" = 1e12)
my_profiles <- player_profiles(
players = unique_players,
nest_data = F,
return_message = TRUE
)
list(ml$namePlayer)
unique_players <- list(ml$namePlayer)
my_profiles <- player_profiles(
players = unique_players,
nest_data = F,
return_message = TRUE
)
error()
error
unique_players
unique_players <- c(ml$namePlayer)
unique_players
my_profiles <- player_profiles(
players = unique_players,
nest_data = F,
return_message = TRUE
)
my_profiles <- player_profiles(
players = c('Stephen Curry'),
nest_data = F,
return_message = TRUE
)
?player_profiles
my_profiles <- player_profiles()
my_profiles <- player_profiles(players = c('Stephen Curry'))
ml <- metrics_leaders(
seasons = 2023,
metric = 'fg3a',
modes = 'Totals'
)
ml
library(nbastatR)
library(dplyr)
library(tidyverse)
library(lubridate)
library(ggplot2)
library(hrbrthemes)
library(ggpattern)
library(scales)
mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
ml <- metrics_leaders(
seasons = 2023,
metric = 'fg3a',
modes = 'Totals'
)
unique_players <- ml$namePlayer
my_profiles <- player_profiles(players = c('Stephen Curry'))
Sys.setenv("VROOM_CONNECTION_SIZE" = 100000000)
my_profiles <- player_profiles(players = c('Stephen Curry'))
my_profiles
unique_players <- ml$namePlayer
my_profiles <- player_profiles(players = unique_players)
unique_players <- ml$namePlayer
n_top_minutes <- 8
top_n_players <- ml %>%
group_by(slugTeam) %>%
arrange(desc(minutes)) %>%
slice_head(n = n_top_minutes) %>%
ungroup()
my_profiles <- player_profiles(players = top_n_players$namePlayer)
1178/60
940 * .02
library(tidyverse)
library(ggplot2)
library(lubridate)
library(scales)
library(Lahman)
library(baseballr)
setwd('baseball/birthdays')
player_id_map <- read_csv('player_id_map.csv')
birthdays <- People %>%
mutate(finalGame = as_date(finalGame)) %>%
filter(finalGame >= as_date('2000-01-01')) %>%
left_join(
select(player_id_map, c('BREFID', 'MLBID')),
by = c('bbrefID' = 'BREFID')
)
in_season_birthdays <- birthdays %>%
filter(birthMonth >= 4 & birthMonth <= 9) %>%
select(playerID, nameFirst, nameLast,
birthDate, birthYear, birthMonth, birthDay,
debut, finalGame,
bbrefID, MLBID) %>%
filter(!is.na(MLBID)) %>%
mutate(debut_year = year(debut), final_year = year(finalGame))
getwd()
list.files(path = “.”, pattern = NULL, full.names = FALSE, ignore.case = FALSE)
list.files(path = 'data/', pattern = NULL, full.names = FALSE, ignore.case = FALSE)
list.files(path = 'data/', pattern = '.csv', full.names = FALSE, ignore.case = FALSE)
data_files <- list.files(
path = 'data/',
pattern = '.csv',
full.names = FALSE,
ignore.case = FALSE
)
data_files
substr(data_files, 1, 11)
player_year_strings <- substr(data_files, 1, 11)
data_files[1]
read_csv(data_files[1])
read_csv(paste0('data/', data_files[1]))
birthday_df <- data.frame()
for (data_file in data_files) {
this_df <- read_csv(paste0('data/', data_file))
birthday_df <- rbind(birthday_df, this_df)
}
for (data_file in data_files) {
this_df <- read_csv(paste0('data/', data_file))
print(dim(this_df))
}
for (data_file in data_files[1:10]) {
this_df <- read_csv(paste0('data/', data_file), message = FALSE)
print(dim(this_df))
}
for (data_file in data_files[1:10]) {
this_df <- read_csv(paste0('data/', data_file), col_types = cols())
print(dim(this_df))
}
```{r message = FALSE}
```{r message = FALSE}
```{r message=FALSE}
birthday_df <- c(read_csv(paste0('data/', data_files[1]))
birthday_df <- c(read_csv(paste0('data/', data_files[1])))
birthday_df <- list(read_csv(paste0('data/', data_files[1])))
for (data_file in data_files[2:10]) {
this_df <- read_csv(paste0('data/', data_file))
print(dim(this_df))
}
for (data_file in data_files[2:3]) {
this_df <- read_csv(paste0('data/', data_file))
print(names(this_df))
}
colnames_1 <- names(read_csv(paste0('data/', data_files[1])))
colnames_1
colnames_2 <- names(read_csv(paste0('data/', data_files[2])))
colnames_2[!colnames_2 %in% colnames_1]
colnames_1
df1 <- read_csv(paste0('data/', data_files[1]))
df1
df1[2, 'summary']
df1[2, 'player_id']
in_season_birthdays %>% filter(MLBID == 112020)
df2 <- read_csv(paste0('data/', data_files[2]))
df2[2, 'player_id']
ncol(df1)
ncol(df2)
df2[2, 'summary']
df3 <- read_csv(paste0('data/', data_files[3]))
df3[2, 'summary']
df3[2, 'player_id']
in_season_birthdays %>% filter(MLBID == 115732)
df3[3, 'summary']
names(df3)
ncol(df3)
df3[3, 'summary']
df3[3, 'plate_appearances']
df3[[3, 'plate_appearances']]
df3[[3, 'total_splits']]
df3[[2, 'total_splits']]
df3[[1, 'total_splits']]
df3[[3, 'type_display_name']]
df3[[3, 'group_display_name']]
df3[[4, 'group_display_name']]
df3[[5, 'group_display_name']]
df3[[5, 'total_splits']]
hitting_stats <- c(
'player_id',
'game_pk',
'fly_outs',
'ground_outs',
'runs',
'doubles',
'triples',
'home_runs',
'strike_outs',
'base_on_balls',
'intentional_walks',
'hits',
'hit_by_pitch',
'at_bats',
'ground_into_double_play',
'ground_into_triple_play',
'plate_appearances',
'total_bases',
'rbi',
'left_on_base',
'sac_bunts',
'sac_flies'
)
df3
df3 %>% filter(group == 'hitting')
df2 %>% filter(group == 'hitting')
df2 %>% filter(group == 'hitting') %>% select('plate_appearances')
df3 %>% filter(group == 'hitting') %>% select('plate_appearances')
df1 %>%
filter(group == 'hitting') %>%
select(hitting_stats)
df1 %>%
filter(group == 'hitting') %>%
select(all_of(hitting_stats))
df1 %>%
filter(group == 'hitting') %>%
select(all_of(hitting_stats))
df2 %>%
filter(group == 'hitting') %>%
select(all_of(hitting_stats))
df3 %>%
filter(group == 'hitting') %>%
select(all_of(hitting_stats))
birthday_df <- data.frame()
for (data_file in data_files[1:10]) {
raw_df <- read_csv(paste0('data/', data_file))
clean_hitter_df <- raw_df %>%
filter(group == 'hitting') %>%
select(all_of(hitting_stats))
birthday_df <- rbind(birthday_df, clean_hitter_df)
}
birthday_df
birthday_df <- data.frame()
for (data_file in data_files[1:100]) {
raw_df <- read_csv(paste0('data/', data_file))
clean_hitter_df <- raw_df %>%
filter(group == 'hitting') %>%
select(all_of(hitting_stats))
birthday_df <- rbind(birthday_df, clean_hitter_df)
}
birthday_df
birthday_df %>% print(n=30)
write_csv(birthday_df, 'birthday_hitter_stats.csv')
17 * 1400 / 100
17 * 1400 / 100 / 60
?left_join
birthdays_augm <- birthday_df %>%
left_join(in_season_birthdays,
by = c('player_id' = 'MLBID')
)
birthdays_augm
birthday_df <- data.frame()
for (data_file in data_files) {
raw_df <- read_csv(
paste0('data/birthday_box_scores/', data_file),
show_col_types = FALSE
)
clean_hitter_df <- raw_df %>%
filter(group == 'hitting') %>%
select(all_of(hitting_stats))
birthday_df <- rbind(birthday_df, clean_hitter_df)
}
# birthdays_augm <- birthday_df %>%
#   left_join(in_season_birthdays,
#             by = c('player_id' = 'MLBID')
#             )
write_csv(birthday_df, 'data/cleaned/birthday_hitter_stats.csv')
birthdays_augm <- birthday_df %>%
left_join(in_season_birthdays,
by = c('player_id' = 'MLBID')
)
names(birthdays_augm)
data_files[1:10]
birthdays_augm %>%
select(nameFirst, nameLast, player_id, hits, plate_appearances) %>%
print(n = 10)
birthdays_augm %>%
select(nameFirst, nameLast, player_id, hits, plate_appearances) %>%
print(n = 100)
data_files[31]
data_files[76]
sum(birthday_df$plate_appearances)
sum(birthday_df$at_bars)
sum(birthday_df$at_bats)
sum(birthday_df$hits)
893 / 3588
sum(birthday_df$total_bases)
1471 / 3588
